

Q:
  join: add timeout + idempotent re-join as heartbeat
  join: return the effective limits
  join: server can reject if too many topic --> custom error
  publish: should there be a size limit?
  read: pagination (nb of message)?
  read: json array with base64?
  read: was a message dropped since last read?
  read: is there more message?
  read: need to include peerId of sender
  list returns:
    - for each topic:
        - name
        - queue-length & queue-policy
        - nb of message in the queue
        - was a message dropped since last read?
  list: add filter
  list: pagination?

  --> there is a need to discover the server limits


type ReadResponse struct {
  AMessageWasDropped int
  RemainingMsg int
  Messages []struct{
    Sender core.PeerID
    Content base64
  }
}



readAll:


